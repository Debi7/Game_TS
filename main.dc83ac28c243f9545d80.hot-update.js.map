{"version":3,"file":"main.dc83ac28c243f9545d80.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAA8E;AAC1C;AACK;AACzC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,+BAA+B;AAC/B;AACA,iCAAiC;AACjC;AACA,sCAAsC;AACtC;AACA,gCAAgC;AAChC;AACA,iCAAiC,YAAY;AAC7C;AACA,sCAAsC,YAAY;AAClD;AACA;AACA,kBAAkB,oDAAa;AAC/B;AACO,mCAAmC,OAAO,iDAAU;AAC3D;AACO;AACP;AACA,aAAa,+CAAQ;AACrB,aAAa,+CAAQ;AACrB,aAAa,+CAAQ;AACrB,aAAa,+CAAQ;AACrB,aAAa,+CAAQ;AACrB,aAAa,+CAAQ;AACrB,aAAa,+CAAQ;AACrB,aAAa,+CAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAO,CAAC,8CAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE;AACA,KAAK;AACL,IAAI,gDAAS;AACb,yEAAyE,oCAAoC;AAC7G;AACA,gDAAgD,yBAAyB;AACzE;AACA,qCAAqC,4BAA4B;AACjE;AACA,KAAK;AACL;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,yEAAyE;AAC1I;AACA;AACA;AACA;AACA,wDAAwD,6BAA6B;AACrF;AACA;AACA,qDAAqD,+CAA+C;AACpG,oDAAoD,yBAAyB;AAC7E;AACA,yCAAyC,4BAA4B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,0DAAmB,yBAAyB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;;;;;;;;UCzIA","sources":["webpack://game_ts/./src/contexts/GameContext.tsx","webpack://game_ts/webpack/runtime/getFullHash"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport _sample from \"lodash/sample\";\nimport quotes from \"../data/quotes.json\";\n// Значения по умолчанию для контекста\nvar defaultContextValues = {\n    start: undefined,\n    setStart: function () { },\n    victory: 0,\n    setVictory: function () { },\n    exception: \"\",\n    setException: function () { },\n    initialCounter: 0,\n    setInitialCounter: function () { },\n    isPaused: false,\n    togglePause: function () { },\n    quote: \"\",\n    generateQuote: function () { return \"\"; },\n    quoteLetters: \"\",\n    returnQuoteLetters: function () { return \"\"; },\n};\n// Создание контекста\nvar GameContext = createContext(defaultContextValues);\n// Хук для использования контекста\nexport var useGameContext = function () { return useContext(GameContext); };\n// Провайдер контекста\nexport var GameProvider = function (_a) {\n    var children = _a.children;\n    var _b = useState(undefined), start = _b[0], setStart = _b[1];\n    var _c = useState(0), victory = _c[0], setVictory = _c[1];\n    var _d = useState(\"\"), exception = _d[0], setException = _d[1];\n    var _e = useState(false), isPaused = _e[0], setIsPaused = _e[1];\n    var _f = useState(\"\"), quote = _f[0], setQuote = _f[1];\n    var _g = useState(\"\"), quoteLetters = _g[0], setQuoteLetters = _g[1];\n    var _h = useState(0), initialCounter = _h[0], setInitialCounter = _h[1];\n    var _j = useState(false), confetti = _j[0], setConfetti = _j[1];\n    // Функция для переключения паузы\n    var togglePause = function () {\n        setIsPaused(!isPaused);\n    };\n    // Функция для генерации случайной цитаты\n    var generateQuote = function () {\n        var randomQuote = _sample(quotes);\n        return randomQuote || \"\";\n    };\n    // Функция для возвращения букв цитаты без пробелов и подчеркиваний\n    var returnQuoteLetters = function (quote) {\n        return quote.replace(/\\s/g, \"\").split(\"_\").join(\"\");\n    };\n    // Эффект для генерации цитаты при старте игры\n    useEffect(function () {\n        if (start) {\n            var newQuote = generateQuote();\n            var letters = returnQuoteLetters(newQuote);\n            setQuote(newQuote);\n            setQuoteLetters(letters);\n            setInitialCounter(Math.floor(letters.length / 2));\n            setException(\"\");\n            setVictory(0);\n        }\n    }, [start]);\n    useEffect(function () {\n        if (!quoteLetters) {\n            var newQuote = generateQuote();\n            var letters = returnQuoteLetters(newQuote);\n            setQuote(newQuote);\n            setQuoteLetters(letters);\n            setException(newQuote);\n            setVictory(victory + 1);\n            setConfetti(true);\n            setTimeout(function () { return setConfetti(false); }, 4000);\n        }\n    }, [victory, confetti]);\n    useEffect(function () {\n        var isGameWon = quoteLetters.split(\"\").every(function (letter) { return exception.includes(letter); });\n        if (isGameWon) {\n            setVictory(function (prevVictory) { return prevVictory + 1; });\n            setConfetti(true);\n            setTimeout(function () { return setConfetti(false); }, 4000);\n        }\n    }, [exception, quoteLetters]);\n    // Обработчик нажатия клавиши\n    useEffect(function () {\n        var keyDownHandler = function (event) {\n            var key = event.key;\n            var underscore = \"_\";\n            var space = \" \";\n            // Игнорируем клавиши \"_\", пробел\n            if (key === underscore || key === space) {\n                return;\n            }\n            // Обновляем цитату, заменяя только первую встречающуюся букву на подчеркивание\n            var updatedQuote = quote.split(\"\");\n            var index = updatedQuote.findIndex(function (char) { return char.toLowerCase() === key.toLowerCase() && char !== underscore; });\n            if (index !== -1) {\n                updatedQuote[index] = underscore;\n                setQuote(updatedQuote.join(\"\"));\n                // Создаем новую строку исключений\n                setException(function (prevException) { return prevException + key; });\n            }\n            // Проверяем, если все символы удалены, то вызываем победу\n            if (updatedQuote.every(function (char) { return char === underscore || char === space; })) {\n                setVictory(function (prevVictory) { return prevVictory + 1; });\n                setConfetti(true);\n                setTimeout(function () { return setConfetti(false); }, 4000);\n            }\n            else {\n                setStart();\n            }\n            setInitialCounter(function (prevCounter) {\n                if (prevCounter > 0) {\n                    return prevCounter - 1;\n                }\n                return prevCounter;\n            });\n            // setInitialCounter((prevCounter) => prevCounter - 1);\n        };\n        window.addEventListener(\"keydown\", keyDownHandler);\n        return function () {\n            window.removeEventListener(\"keydown\", keyDownHandler);\n        };\n    }, [quote, exception, victory, confetti]);\n    return (React.createElement(GameContext.Provider, { value: {\n            start: start,\n            setStart: setStart,\n            victory: victory,\n            setVictory: setVictory,\n            exception: exception,\n            setException: setException,\n            initialCounter: initialCounter,\n            setInitialCounter: setInitialCounter,\n            isPaused: isPaused,\n            togglePause: togglePause,\n            quote: quote,\n            generateQuote: generateQuote,\n            quoteLetters: quoteLetters,\n            returnQuoteLetters: returnQuoteLetters,\n        } }, children));\n};\n","__webpack_require__.h = () => (\"a0a9f79d8898f102b90c\")"],"names":[],"sourceRoot":""}