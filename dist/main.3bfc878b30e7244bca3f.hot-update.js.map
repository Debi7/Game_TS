{"version":3,"file":"main.3bfc878b30e7244bca3f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAA0B;AACoB;AACJ;AACZ;AACE;AACJ;AAC6B;AACnC;AACtB;AACA,aAAa,qEAAc;AAC3B;AACA;AACA;AACA;AACA,YAAY,0DAAmB,CAAC,uDAAc;AAC9C,QAAQ,0DAAmB,CAAC,uDAAc,IAAI,iBAAiB;AAC/D;AACA,QAAQ,0DAAmB,UAAU,4BAA4B;AACjE,YAAY,0DAAmB,UAAU,sBAAsB,yBAAyB,0DAAmB,CAAC,uDAAc;AAC1H,gBAAgB,0DAAmB,CAAC,8CAAK,IAAI,4EAA4E;AACzH,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB,UAAU,2BAA2B;AACxE,oBAAoB,0DAAmB,CAAC,qDAAY,IAAI,4BAA4B;AACpF,oBAAoB,0DAAmB,CAAC,gDAAO,IAAI,kBAAkB,QAAQ,0DAAmB,CAAC,+CAAM,IAAI,kCAAkC;AAC7I;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;;;;ACzBrB;AACmD;AACS;AAC5D;AACA;AACA,aAAa,qEAAc;AAC3B,aAAa,+CAAQ;AACrB,IAAI,gDAAS;AACb;AACA;AACA,6CAA6C,2BAA2B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,gDAAS;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,YAAY,0DAAmB;AAC/B,QAAQ,0DAAmB,UAAU,4BAA4B;AACjE;AACA;AACA,QAAQ,0DAAmB,aAAa,4BAA4B;AACpE;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;ACjCrB,mBAAmB,qDAAqD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,0BAA0B;AAC1B;AACA,4BAA4B;AAC5B;AACA,iCAAiC;AACjC;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,yDAAyD,UAAU;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;;;;;;;;UCpEA","sources":["webpack://game_ts/./src/components/Index.tsx","webpack://game_ts/./src/components/Timer/index.tsx","webpack://game_ts/./src/contexts/GameContext.tsx","webpack://game_ts/webpack/runtime/getFullHash"],"sourcesContent":["import React from \"react\";\nimport ConfettiSplash from \"./ConfettiSplash\";\nimport LettersCount from \"./LettersCount\";\nimport Status from \"./Status\";\nimport Victory from \"./Victory\";\nimport Timer from \"./Timer\";\nimport { useGameContext } from \"../contexts/GameContext\";\nimport \"./index.scss\";\nvar Index = function () {\n    var _a = useGameContext(), start = _a.start, setStart = _a.setStart, victory = _a.victory, exception = _a.exception, initialCounter = _a.initialCounter, isPaused = _a.isPaused;\n    var quoteLetters = returnQuoteLetters(exception);\n    function returnQuoteLetters(quote) {\n        return quote.replace(/\\s/g, \"\").split(\"_\").join(\"\");\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(ConfettiSplash, { confetti: false }),\n        \" \",\n        React.createElement(\"div\", { className: \"section-quote\" },\n            React.createElement(\"div\", { className: \"wrapper\" }, start !== undefined ? (React.createElement(React.Fragment, null,\n                React.createElement(Timer, { initialTime: initialCounter, isPaused: isPaused, onTimeUp: function () { } }),\n                React.createElement(\"h1\", null, exception),\n                React.createElement(\"div\", { className: \"info-wrapper\" },\n                    React.createElement(LettersCount, { quoteLetters: quoteLetters }),\n                    React.createElement(Victory, { victory: victory })))) : (React.createElement(Status, { start: start, setStart: setStart }))))));\n};\nexport default Index;\n","// Timer.tsx\nimport React, { useEffect, useState } from \"react\";\nimport { useGameContext } from \"../../contexts/GameContext\";\nvar Timer = function (_a) {\n    var initialTime = _a.initialTime, onTimeUp = _a.onTimeUp;\n    var _b = useGameContext(), isPaused = _b.isPaused, togglePause = _b.togglePause;\n    var _c = useState(initialTime), time = _c[0], setTime = _c[1];\n    useEffect(function () {\n        var timer = null;\n        if (!isPaused && time > 0) {\n            timer = setTimeout(function () { return setTime(time - 1); }, 1000);\n        }\n        if (time === 0) {\n            onTimeUp();\n        }\n        return function () {\n            if (timer)\n                clearTimeout(timer);\n        };\n    }, [time, isPaused, onTimeUp]);\n    // Обновляем внутренний state таймера при изменении initialTime\n    useEffect(function () {\n        setTime(initialTime);\n    }, [initialTime]);\n    var handleButtonClick = function () {\n        togglePause();\n    };\n    return (React.createElement(\"div\", null,\n        React.createElement(\"div\", { className: \"timer-display\" },\n            \"\\u0422\\u0430\\u0439\\u043C\\u0435\\u0440: \",\n            time),\n        React.createElement(\"button\", { onClick: handleButtonClick }, isPaused ? \"Играть\" : \"Пауза\")));\n};\nexport default Timer;\n","// import React, { createContext, useContext, useState, FC, ReactNode } from \"react\";\n// import _sample from \"lodash/sample\";\n// import quotes from \"../data/quotes.json\";\n// interface GameContextProps {\n//   start?: boolean;\n//   setStart: (value: boolean | undefined) => void;\n//   victory: number;\n//   setVictory: (value: number) => void;\n//   exception: string;\n//   setException: (value: string) => void;\n//   initialCounter: number;\n//   setInitialCounter: (value: number) => void;\n//   isPaused: boolean;\n//   togglePause: () => void;\n// }\n// // Значения по умолчанию для контекста\n// const defaultContextValues: GameContextProps = {\n//   start: undefined,\n//   setStart: () => { },\n//   victory: 0,\n//   setVictory: () => { },\n//   exception: \"\",\n//   setException: () => { },\n//   initialCounter: 0,\n//   setInitialCounter: () => { },\n//   isPaused: false,\n//   togglePause: () => { },\n// };\n// const GameContext = createContext<GameContextProps>(defaultContextValues);\n// export const useGameContext = () => useContext(GameContext);\n// // Типизация провайдера с учетом children\n// interface GameProviderProps {\n//   children: ReactNode; // Правильная типизация для children\n// }\n// export const GameProvider: FC<GameProviderProps> = ({ children }) => {\n//   const [start, setStart] = useState<boolean | undefined>(undefined);\n//   const [victory, setVictory] = useState<number>(0);\n//   const [exception, setException] = useState<string>(\"\");\n//   const [initialCounter, setInitialCounter] = useState<number>(0);\n//   const [isPaused, setIsPaused] = useState<boolean>(false);\n//   const togglePause = () => {\n//     setIsPaused(!isPaused);\n//   };\n//   const generateQuote = () => {\n//     const randomQuote = _sample(quotes);\n//     return randomQuote || \"\";\n//   };\n//   const returnQuoteLetters = (quote: string) => {\n//     return quote.replace(/\\s/g, \"\").split(\"_\").join(\"\");\n//   };\n//   return (\n//     <GameContext.Provider\n//       value={{\n//         start,\n//         setStart,\n//         victory,\n//         setVictory,\n//         exception,\n//         setException,\n//         initialCounter,\n//         setInitialCounter,\n//         isPaused,\n//         togglePause,\n//       }}\n//     >\n//       {children}\n//     </GameContext.Provider>\n//   );\n// };\n","__webpack_require__.h = () => (\"bece891f5a51cd6ef998\")"],"names":[],"sourceRoot":""}